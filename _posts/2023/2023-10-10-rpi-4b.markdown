---
layout: post
title: Raspberry Pi 4B
date: '2023-10-10 13:19'
subtitle: Serial Setup
comments: true
header-img: "img/home-bg-geek.jpg"
tags:
    - Raspberry Pi
---

## Set Up Rpi For Serial Communication

- Enable rpi serial:

    ```
    sudo raspi-config
    ```

    1. Rpi has an option to allow a user to login to the system via serial. Choose `no`
    2. Answer YES to the question about serial hardware port.

- `sudo usermod -a -G dialout $USER`
- `/boot/config.txt`

```bash
enable_uart=1
dtoverlay=disable-bt
```

- `/boot/cmdline.txt`: remove this: `console=serial0,115200`
- `sudo reboot`
- `ls -l /dev/serial*` should see:

```
lrwxrwxrwx 1 root root 7 Jan  3 00:00 /dev/serial0 -> ttyAMA0
```

- do a loop back test with Tx and Rx connected together

<div style="text-align: center;">
<p align="center">
    <figure>
        <img src="https://www.raspberrypi.com/documentation/computers/images/GPIO-Pinout-Diagram-2.png?hash=df7d7847c57a1ca6d5b2617695de6d46" height="300" alt=""/>
    </figure>
</p>
</div>

    - Tools like `screen` and `minicom` may hang. So just test with python should be fine

    - Test with `serial`

    ```python
    import serial

    # Open the serial port
    ser = serial.Serial('/dev/serial0', baudrate=9600, timeout=1)

    # Write data
    ser.write(b'Hello, UART!\n')

    # Read data (loopback test)
    data = ser.readline()
    print(f"Received: {data}")

    ser.close()
    ```

## Running Docker on Rpi 4b+

- Issue: My docker container exited immediately after launching. There is a warning: `The requested image's platform (linux/arm64) does not match the detected host platform (linux/arm/v8) `
    - Solution: "You've got a mixed kernel/userspace install as a result of Raspbian forcibly upgrading your kernel to 64-bit and as a result you can't run most images, even forcing the architecture via the tag."
    - [Reference](https://github.com/linuxserver/docker-wireguard/issues/312)
    - One can confirm that the raspbian is truly 32 bits:
        - `file /bin/bash`, If it says 32-bit executable, the system is 32-bit. If it says 64-bit executable, the system is 64-bit. 
        - `dpkg --print-architecture`. `armhf` indicates a 32-bit system, `arm64` indicates a 64-bit system.
